@attribute [Route(Routes.Home)]
@using Eggbox.Services
@using Eggbox.Models
@using Optional
@using Eggbox.Exntensions;
@inject MixerConnectorService Connector

<section class="container">
    <h1 class="text-red-500 text-xl font-semibold tracking-wide">MIXING INTERFACE</h1>
    <p class="mt-4 text-gray-600">
        Welcome to your mixing app.
    </p>
    
    @lastMixer.Render(lm => 
        @<div>
            
            <div class="mb-4 text-center">
                <p class="text-gray-700">Last mixer used: <strong>@lm.IpAddress</strong></p>
                <button class="mt-2 px-4 py-2 bg-green-200 rounded-xl hover:bg-green-300 transition"
                        @onclick="() => ReconnectToLastMixer(lm)">
                    Connect
                </button>
            </div>
        @if (showReconnectError)
        {
            <div class="p-4 mt-4 rounded-xl bg-yellow-100 border border-yellow-300 text-yellow-800 shadow-neumorphic-light">
                <p>Kan geen verbinding maken met <strong>@lm.IpAddress</strong>.</p>
                <p>Staat de mixer aan en is deze verbonden met hetzelfde wifi-netwerk?</p>
                
                <div class="mt-4 flex gap-4 justify-center">
                    <button @onclick="()=>ReconnectToLastMixer(lm)" class="px-4 py-2 bg-gray-200 rounded-xl hover:bg-gray-300">Opnieuw proberen</button>
                    <button @onclick="()=>ForgetLastMixer()" class="px-4 py-2 bg-red-200 text-red-800 rounded-xl hover:bg-red-300">Mixer vergeten</button>
                </div>
            </div>
        }

        </div>)
    
   

    
    <NavLink href="@Routes.MixerScanner" class="mt-10">Mixer zoeken</NavLink>

</section>

@code {
    private Option<MixerInfo> lastMixer;
    private bool showReconnectError = false;

    private void ForgetLastMixer()
    {
        Storage.Remove(StorageKeys.LastMixer);
        lastMixer = Option.None<MixerInfo>();
        showReconnectError = false;
    }
    
    protected override async Task OnInitializedAsync()
    {
        lastMixer = LoadLastMixer();
    }
    
    private Option<MixerInfo> LoadLastMixer()
    {
        return Storage.Get(StorageKeys.LastMixer);
    }

    private async Task ReconnectToLastMixer(MixerInfo mixer)
    {
        var success = await Connector.TryConnectToMixer(mixer);//DEZE WERKT NOG NIET

        if (!success)
        {
            showReconnectError = true;
        }
        else
        {
            NavManager.NavigateTo(Routes.Band);
        }
    }
}