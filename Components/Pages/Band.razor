@attribute [Route(Routes.Band)]
@using Eggbox.Services
@using Eggbox.Models
@inject MixerConnectorService Connector
@inject MixerCommandService Mixer
@inject MixerStateCacheService Cache
@inject BandStateService BandState
@inject NavigationManager NavManager

<section class="h-screen container flex flex-col py-6">
    <div class="mt-6">
        <h1 class="text-2xl text-gray-700 font-semibold text-center mb-6">
            Who’s in the band?
        </h1>
    </div>

    <div class="space-y-4 overflow-y-auto mb-6">
        @foreach (var member in _members)
        {
            <div class="flex items-center justify-between p-4 rounded-xl bg-white/70 backdrop-blur-sm border border-gray-200 shadow-sm">
                <div class="flex items-center gap-4">
                    <div class="size-5 rounded-md border border-gray-300"
                         style="background-color:@member.Color.HexCode"></div>

                    <input class="text-lg font-semibold bg-transparent border-b border-gray-300 focus:outline-none"
                           @bind="member.Name"
                           placeholder="Name" />
                </div>

                <span class="text-sm text-gray-500">Mix @member.BusIndex</span>
            </div>
        }
    </div>

    @if (_showError)
    {
        <p class="text-red-600 italic text-center mb-4">
            Please enter a name for each band member.
        </p>
    }

    <button @onclick="Next" class="btn btn-primary mt-auto self-center px-8">
        Next →
    </button>
</section>

@code {
    private List<BandMemberSetup> _members = new();
    private bool _showError = false;

    protected override async Task OnInitializedAsync()
    {
        await Mixer.InitializeBussesAsync(6);
        await Task.Delay(300); // geef mixer tijd om OSC-responses te sturen

        _members = Enumerable.Range(1, 6)
            .Select(i => new BandMemberSetup(
                i,
                Cache.BusNames.GetValueOrDefault(i, $"Mix {i}"),
                Cache.BusColors.GetValueOrDefault(i, MixerColor.FromMappedValue(i).ValueOr(MixerColor.Red))
            ))
            .ToList();
    }

    private async Task Next()
    {
        if (_members.Any(m => string.IsNullOrWhiteSpace(m.Name)))
        {
            _showError = true;
            await InvokeAsync(StateHasChanged);
            return;
        }

        BandState.SetMembers(_members);
        NavManager.NavigateTo($"/member-setup/1");
    }
}
